trigger:
  - main
pr:
  - main

variables:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 'true'
  DOTNET_CLI_TELEMETRY_OPTOUT: 'true'
  INPUT_VERSIONSPEC: '5.x'
  INPUT_INCLUDEPRERELEASE: 'false'
  INPUT_IGNOREFAILEDSOURCES: 'true'
  INPUT_PREFERLATESTVERSION: 'false'

jobs:
- job: build
  displayName: ''
  strategy:
    matrix:
      'ubuntu-latest':
        imageName: 'ubuntu-latest'
      'macos-latest':
        imageName: 'macos-latest'
      'windows-latest':
        imageName: 'windows-latest'

  pool:
    vmImage: $(imageName)

  steps:
    - checkout: self
      fetchDepth: '0'
    - pwsh: |
        npm install
        npm run format-check
        npm run build:github
        npm run build:azure
      displayName: 'Build code'
    - pwsh: |
        # set the inputs for the 'gitversion/setup' action
        $env:INPUT_VERSIONSPEC = "$(INPUT_VERSIONSPEC)"
        $env:INPUT_INCLUDEPRERELEASE = "$(INPUT_INCLUDEPRERELEASE)"
        $env:INPUT_IGNOREFAILEDSOURCES = "$(INPUT_IGNOREFAILEDSOURCES)"
        $env:INPUT_PREFERLATESTVERSION = "$(INPUT_PREFERLATESTVERSION)"

        # run the 'gitversion/setup' action
        node ./gitversion/setup/bundle.js
      displayName: gitversion/setup
      workingDirectory: dist/azure
    - pwsh: node ./gitversion/execute/bundle.js
      name: version
      displayName: gitversion/execute
      workingDirectory: dist/azure
    - pwsh: |
        echo "FullSemVer (fullSemVer)                    : $(fullSemVer)"
        echo "FullSemVer (GitVersion_FullSemVer)         : $(GitVersion_FullSemVer)"
        echo "FullSemVer (version.fullSemVer)            : $(version.fullSemVer)"
        echo "FullSemVer (version.GitVersion_FullSemVer) : $(version.GitVersion_FullSemVer)"
      displayName: Use variables and output
