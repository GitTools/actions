trigger:
  - main
pr:
  - main

variables:
  - group: gittools-actions
  - name: DOTNET_SKIP_FIRST_TIME_EXPERIENCE
    value: 'true'
  - name: DOTNET_CLI_TELEMETRY_OPTOUT
    value: 'true'

jobs:
- job: build
  displayName: ''
  strategy:
    matrix:
      'ubuntu-latest':
        imageName: 'ubuntu-latest'
      'macos-latest':
        imageName: 'macos-latest'
      'windows-latest':
        imageName: 'windows-latest'

  pool:
    vmImage: $(imageName)

  steps:
    - checkout: self
      fetchDepth: '0'
    - pwsh: |
        npm install
        npm run format-check
        npm run build:agent:github
        npm run build:agent:azure
      displayName: 'Build code'
    - pwsh: |
        # set the inputs for the 'gitversion/setup' action
        $env:INPUT_VERSIONSPEC = '5.x'
        $env:INPUT_INCLUDEPRERELEASE = 'false'
        $env:INPUT_IGNOREFAILEDSOURCES = 'true'
        $env:INPUT_PREFERLATESTVERSION = 'false'

        # run the 'gitversion/setup' action
        node ./gitversion/setup/bundle.js
      displayName: gitversion/setup
      workingDirectory: dist/azure
    - pwsh: |
        # set the inputs for the 'gitversion/execute' action
        $env:INPUT_TARGETPATH = './'
        $env:INPUT_DISABLECACHE = 'true'
        $env:INPUT_DISABLENORMALIZATION = 'false'
        $env:INPUT_OVERRIDECONFIG = '
          next-version=1.0.0
          update-build-number=false'

        # run the 'gitversion/execute' action
        node ./gitversion/execute/bundle.js
      name: version
      displayName: gitversion/execute
      workingDirectory: dist/azure
    - pwsh: |
        echo "Major      (major)                         : $(major)"
        echo "Major      (GitVersion_Major)              : $(GitVersion_Major)"
        echo "Major      (version.major)                 : $(version.major)"
        echo "Major      (version.GitVersion_Major)      : $(version.GitVersion_Major)"

        echo "Minor      (minor)                         : $(minor)"
        echo "Minor      (GitVersion_Minor)              : $(GitVersion_Minor)"
        echo "Minor      (version.minor)                 : $(version.minor)"
        echo "Minor      (version.GitVersion_Minor)      : $(version.GitVersion_Minor)"

        echo "Patch      (patch)                         : $(patch)"
        echo "Patch      (GitVersion_Patch)              : $(GitVersion_Patch)"
        echo "Patch      (version.patch)                 : $(version.patch)"
        echo "Patch      (version.GitVersion_Patch)      : $(version.GitVersion_Patch)"

        echo "FullSemVer (fullSemVer)                    : $(fullSemVer)"
        echo "FullSemVer (GitVersion_FullSemVer)         : $(GitVersion_FullSemVer)"
        echo "FullSemVer (version.fullSemVer)            : $(version.fullSemVer)"
        echo "FullSemVer (version.GitVersion_FullSemVer) : $(version.GitVersion_FullSemVer)"
      displayName: Use variables and output
