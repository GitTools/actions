{"version":3,"file":"build-agent.js","sources":["../../../src/agents/azure/command.ts","../../../src/agents/azure/build-agent.ts"],"sourcesContent":["import * as os from 'node:os'\nimport * as process from 'node:process'\n\nconst CMD_PREFIX = '##vso['\n\nexport interface CommandProperties {\n    [key: string]: string | object\n}\n\nexport enum TaskResult {\n    Succeeded = 0,\n    SucceededWithIssues = 1,\n    Failed = 2,\n    Cancelled = 3,\n    Skipped = 4\n}\n\n/**\n *  Command Format:\n *    ##vso[artifact.command key=value;key=value]user message\n *\n *  Examples:\n *    ##vso[task.progress value=58]\n *    ##vso[task.issue type=warning;]This is the user warning message\n **/\nexport function issueCommand(command: string, properties: CommandProperties, message: string): void {\n    const cmd = new Command(command, properties, message)\n    process.stdout.write(cmd.toString() + os.EOL)\n}\n\nclass Command {\n    private readonly command: string\n    private readonly message: string\n    private readonly properties: CommandProperties\n\n    constructor(command: string, properties: CommandProperties, message: string) {\n        if (!command) {\n            command = 'missing.command'\n        }\n\n        this.command = command\n        this.properties = properties\n        this.message = message\n    }\n\n    toString(): string {\n        let cmdStr = CMD_PREFIX + this.command\n\n        if (this.properties && Object.keys(this.properties).length > 0) {\n            cmdStr += ' '\n            for (const key in this.properties) {\n                if (this.properties.hasOwnProperty(key)) {\n                    const val = this.properties[key]\n                    if (val) {\n                        // safely append the val - avoid blowing up when attempting to\n                        // call .replace() if message is not a string for some reason\n                        cmdStr += `${key}=${escapeProperty(`${val || ''}`)};`\n                    }\n                }\n            }\n        }\n\n        cmdStr += ']'\n\n        // safely append the message - avoid blowing up when attempting to\n        // call .replace() if message is not a string for some reason\n        const message = `${this.message || ''}`\n        cmdStr += escapeData(message)\n\n        return cmdStr\n    }\n}\n\nfunction escapeData(s: string | object): string {\n    return toCommandValue(s).replace(/%/g, '%AZP25').replace(/\\r/g, '%0D').replace(/\\n/g, '%0A')\n}\n\nfunction escapeProperty(s: string | object): string {\n    return toCommandValue(s).replace(/%/g, '%AZP25').replace(/\\r/g, '%0D').replace(/\\n/g, '%0A').replace(/]/g, '%5D').replace(/;/g, '%3B')\n}\n\nfunction toCommandValue(input: string | object): string {\n    if (input === null || input === undefined) {\n        return ''\n    } else if (typeof input === 'string' || input instanceof String) {\n        return input as string\n    }\n    return JSON.stringify(input)\n}\n","import * as os from 'node:os'\nimport * as process from 'node:process'\nimport { BuildAgentBase, IBuildAgent } from '@agents/common'\nimport { issueCommand, TaskResult } from './command'\n\nexport class BuildAgent extends BuildAgentBase implements IBuildAgent {\n    agentName = 'Azure Pipelines'\n\n    sourceDirVariable = 'BUILD_SOURCESDIRECTORY'\n    tempDirVariable = 'AGENT_TEMPDIRECTORY'\n    cacheDirVariable = 'AGENT_TOOLSDIRECTORY'\n\n    addPath(inputPath: string): void {\n        super.addPath(inputPath)\n        issueCommand('task.prependpath', {}, inputPath)\n    }\n\n    info = (message: string): void => {\n        process.stdout.write(message + os.EOL)\n    }\n\n    debug = (message: string): void => issueCommand('task.debug', {}, message)\n\n    warn = (message: string): void => issueCommand('task.issue', { type: 'warning' }, message)\n\n    error = (message: string): void => issueCommand('task.issue', { type: 'error' }, message)\n\n    setSucceeded = (message: string, done?: boolean): void => this._setResult(TaskResult.Succeeded, message, done)\n\n    setFailed = (message: string, done?: boolean): void => this._setResult(TaskResult.Failed, message, done)\n\n    setOutput = (name: string, value: string): void => this._setVariable(name, value, true)\n\n    setVariable = (name: string, value: string): void => this._setVariable(name, value)\n\n    private _setResult(result: TaskResult, message: string, done?: boolean): void {\n        this.debug(`task result: ${TaskResult[result]}`)\n        // add an error issue\n        if (result === TaskResult.Failed && message) {\n            this.error(message)\n        } else if (result === TaskResult.SucceededWithIssues && message) {\n            this.warn(message)\n        } else {\n            this.info(message)\n        }\n        // task.complete\n        const properties: Record<string, string> = { result: TaskResult[result] }\n        if (done) {\n            properties['done'] = 'true'\n        }\n        issueCommand('task.complete', properties, message)\n    }\n\n    private _setVariable(name: string, val: string, isOutput = false): void {\n        const key: string = this._getVariableKey(name)\n        const varValue = val || ''\n        process.env[key] = varValue\n\n        issueCommand(\n            'task.setvariable',\n            {\n                variable: name || '',\n                isOutput: (isOutput || false).toString(),\n                issecret: 'false'\n            },\n            varValue\n        )\n    }\n\n    private _getVariableKey(name: string): string {\n        return name.replace(/\\./g, '_').replace(/ /g, '_').toUpperCase()\n    }\n}\n"],"names":["TaskResult"],"mappings":";;;;AAGA,MAAM,UAAa,GAAA,QAAA,CAAA;AAMP,IAAA,UAAA,qBAAAA,WAAL,KAAA;AACH,EAAAA,WAAAA,CAAAA,WAAAA,CAAA,eAAY,CAAZ,CAAA,GAAA,WAAA,CAAA;AACA,EAAAA,WAAAA,CAAAA,WAAAA,CAAA,yBAAsB,CAAtB,CAAA,GAAA,qBAAA,CAAA;AACA,EAAAA,WAAAA,CAAAA,WAAAA,CAAA,YAAS,CAAT,CAAA,GAAA,QAAA,CAAA;AACA,EAAAA,WAAAA,CAAAA,WAAAA,CAAA,eAAY,CAAZ,CAAA,GAAA,WAAA,CAAA;AACA,EAAAA,WAAAA,CAAAA,WAAAA,CAAA,aAAU,CAAV,CAAA,GAAA,SAAA,CAAA;AALQ,EAAAA,OAAAA,WAAAA,CAAAA;AAAA,CAAA,EAAA,UAAA,IAAA,EAAA,CAAA,CAAA;AAgBI,SAAA,YAAA,CAAa,OAAiB,EAAA,UAAA,EAA+B,OAAuB,EAAA;AAChG,EAAA,MAAM,GAAM,GAAA,IAAI,OAAQ,CAAA,OAAA,EAAS,YAAY,OAAO,CAAA,CAAA;AACpD,EAAA,OAAA,CAAQ,OAAO,KAAM,CAAA,GAAA,CAAI,QAAS,EAAA,GAAI,GAAG,GAAG,CAAA,CAAA;AAChD,CAAA;AAEA,MAAM,OAAQ,CAAA;AAAA,EACO,OAAA,CAAA;AAAA,EACA,OAAA,CAAA;AAAA,EACA,UAAA,CAAA;AAAA,EAEjB,WAAA,CAAY,OAAiB,EAAA,UAAA,EAA+B,OAAiB,EAAA;AACzE,IAAA,IAAI,CAAC,OAAS,EAAA;AACV,MAAU,OAAA,GAAA,iBAAA,CAAA;AAAA,KACd;AAEA,IAAA,IAAA,CAAK,OAAU,GAAA,OAAA,CAAA;AACf,IAAA,IAAA,CAAK,UAAa,GAAA,UAAA,CAAA;AAClB,IAAA,IAAA,CAAK,OAAU,GAAA,OAAA,CAAA;AAAA,GACnB;AAAA,EAEA,QAAmB,GAAA;AACf,IAAI,IAAA,MAAA,GAAS,aAAa,IAAK,CAAA,OAAA,CAAA;AAE/B,IAAI,IAAA,IAAA,CAAK,cAAc,MAAO,CAAA,IAAA,CAAK,KAAK,UAAU,CAAA,CAAE,SAAS,CAAG,EAAA;AAC5D,MAAU,MAAA,IAAA,GAAA,CAAA;AACV,MAAW,KAAA,MAAA,GAAA,IAAO,KAAK,UAAY,EAAA;AAC/B,QAAA,IAAI,IAAK,CAAA,UAAA,CAAW,cAAe,CAAA,GAAG,CAAG,EAAA;AACrC,UAAM,MAAA,GAAA,GAAM,IAAK,CAAA,UAAA,CAAW,GAAG,CAAA,CAAA;AAC/B,UAAA,IAAI,GAAK,EAAA;AAGL,YAAU,MAAA,IAAA,CAAA,EAAG,GAAG,CAAI,CAAA,EAAA,cAAA,CAAe,GAAG,GAAO,IAAA,EAAE,EAAE,CAAC,CAAA,CAAA,CAAA,CAAA;AAAA,WACtD;AAAA,SACJ;AAAA,OACJ;AAAA,KACJ;AAEA,IAAU,MAAA,IAAA,GAAA,CAAA;AAIV,IAAA,MAAM,OAAU,GAAA,CAAA,EAAG,IAAK,CAAA,OAAA,IAAW,EAAE,CAAA,CAAA,CAAA;AACrC,IAAA,MAAA,IAAU,WAAW,OAAO,CAAA,CAAA;AAE5B,IAAO,OAAA,MAAA,CAAA;AAAA,GACX;AACJ,CAAA;AAEA,SAAS,WAAW,CAA4B,EAAA;AAC5C,EAAA,OAAO,cAAe,CAAA,CAAC,CAAE,CAAA,OAAA,CAAQ,IAAM,EAAA,QAAQ,CAAE,CAAA,OAAA,CAAQ,KAAO,EAAA,KAAK,CAAE,CAAA,OAAA,CAAQ,OAAO,KAAK,CAAA,CAAA;AAC/F,CAAA;AAEA,SAAS,eAAe,CAA4B,EAAA;AAChD,EAAO,OAAA,cAAA,CAAe,CAAC,CAAE,CAAA,OAAA,CAAQ,MAAM,QAAQ,CAAA,CAAE,QAAQ,KAAO,EAAA,KAAK,EAAE,OAAQ,CAAA,KAAA,EAAO,KAAK,CAAE,CAAA,OAAA,CAAQ,MAAM,KAAK,CAAA,CAAE,OAAQ,CAAA,IAAA,EAAM,KAAK,CAAA,CAAA;AACzI,CAAA;AAEA,SAAS,eAAe,KAAgC,EAAA;AACpD,EAAI,IAAA,KAAA,KAAU,IAAQ,IAAA,KAAA,KAAU,KAAW,CAAA,EAAA;AACvC,IAAO,OAAA,EAAA,CAAA;AAAA,GACA,MAAA,IAAA,OAAO,KAAU,KAAA,QAAA,IAAY,iBAAiB,MAAQ,EAAA;AAC7D,IAAO,OAAA,KAAA,CAAA;AAAA,GACX;AACA,EAAO,OAAA,IAAA,CAAK,UAAU,KAAK,CAAA,CAAA;AAC/B;;ACnFO,MAAM,mBAAmB,cAAsC,CAAA;AAAA,EAClE,SAAY,GAAA,iBAAA,CAAA;AAAA,EAEZ,iBAAoB,GAAA,wBAAA,CAAA;AAAA,EACpB,eAAkB,GAAA,qBAAA,CAAA;AAAA,EAClB,gBAAmB,GAAA,sBAAA,CAAA;AAAA,EAEnB,QAAQ,SAAyB,EAAA;AAC7B,IAAA,KAAA,CAAM,QAAQ,SAAS,CAAA,CAAA;AACvB,IAAa,YAAA,CAAA,kBAAA,EAAoB,EAAC,EAAG,SAAS,CAAA,CAAA;AAAA,GAClD;AAAA,EAEA,IAAA,GAAO,CAAC,OAA0B,KAAA;AAC9B,IAAA,OAAA,CAAQ,MAAO,CAAA,KAAA,CAAM,OAAU,GAAA,EAAA,CAAG,GAAG,CAAA,CAAA;AAAA,GACzC,CAAA;AAAA,EAEA,QAAQ,CAAC,OAAA,KAA0B,aAAa,YAAc,EAAA,IAAI,OAAO,CAAA,CAAA;AAAA,EAEzE,IAAA,GAAO,CAAC,OAA0B,KAAA,YAAA,CAAa,cAAc,EAAE,IAAA,EAAM,SAAU,EAAA,EAAG,OAAO,CAAA,CAAA;AAAA,EAEzF,KAAA,GAAQ,CAAC,OAA0B,KAAA,YAAA,CAAa,cAAc,EAAE,IAAA,EAAM,OAAQ,EAAA,EAAG,OAAO,CAAA,CAAA;AAAA,EAExF,YAAA,GAAe,CAAC,OAAiB,EAAA,IAAA,KAAyB,KAAK,UAAW,CAAA,UAAA,CAAW,SAAW,EAAA,OAAA,EAAS,IAAI,CAAA,CAAA;AAAA,EAE7G,SAAA,GAAY,CAAC,OAAiB,EAAA,IAAA,KAAyB,KAAK,UAAW,CAAA,UAAA,CAAW,MAAQ,EAAA,OAAA,EAAS,IAAI,CAAA,CAAA;AAAA,EAEvG,SAAA,GAAY,CAAC,IAAc,EAAA,KAAA,KAAwB,KAAK,YAAa,CAAA,IAAA,EAAM,OAAO,IAAI,CAAA,CAAA;AAAA,EAEtF,cAAc,CAAC,IAAA,EAAc,UAAwB,IAAK,CAAA,YAAA,CAAa,MAAM,KAAK,CAAA,CAAA;AAAA,EAE1E,UAAA,CAAW,MAAoB,EAAA,OAAA,EAAiB,IAAsB,EAAA;AAC1E,IAAA,IAAA,CAAK,KAAM,CAAA,CAAA,aAAA,EAAgB,UAAW,CAAA,MAAM,CAAC,CAAE,CAAA,CAAA,CAAA;AAE/C,IAAI,IAAA,MAAA,KAAW,UAAW,CAAA,MAAA,IAAU,OAAS,EAAA;AACzC,MAAA,IAAA,CAAK,MAAM,OAAO,CAAA,CAAA;AAAA,KACX,MAAA,IAAA,MAAA,KAAW,UAAW,CAAA,mBAAA,IAAuB,OAAS,EAAA;AAC7D,MAAA,IAAA,CAAK,KAAK,OAAO,CAAA,CAAA;AAAA,KACd,MAAA;AACH,MAAA,IAAA,CAAK,KAAK,OAAO,CAAA,CAAA;AAAA,KACrB;AAEA,IAAA,MAAM,UAAqC,GAAA,EAAE,MAAQ,EAAA,UAAA,CAAW,MAAM,CAAE,EAAA,CAAA;AACxE,IAAA,IAAI,IAAM,EAAA;AACN,MAAA,UAAA,CAAW,MAAM,CAAI,GAAA,MAAA,CAAA;AAAA,KACzB;AACA,IAAa,YAAA,CAAA,eAAA,EAAiB,YAAY,OAAO,CAAA,CAAA;AAAA,GACrD;AAAA,EAEQ,YAAa,CAAA,IAAA,EAAc,GAAa,EAAA,QAAA,GAAW,KAAa,EAAA;AACpE,IAAM,MAAA,GAAA,GAAc,IAAK,CAAA,eAAA,CAAgB,IAAI,CAAA,CAAA;AAC7C,IAAA,MAAM,WAAW,GAAO,IAAA,EAAA,CAAA;AACxB,IAAQ,OAAA,CAAA,GAAA,CAAI,GAAG,CAAI,GAAA,QAAA,CAAA;AAEnB,IAAA,YAAA;AAAA,MACI,kBAAA;AAAA,MACA;AAAA,QACI,UAAU,IAAQ,IAAA,EAAA;AAAA,QAClB,QAAA,EAAA,CAAW,QAAY,IAAA,KAAA,EAAO,QAAS,EAAA;AAAA,QACvC,QAAU,EAAA,OAAA;AAAA,OACd;AAAA,MACA,QAAA;AAAA,KACJ,CAAA;AAAA,GACJ;AAAA,EAEQ,gBAAgB,IAAsB,EAAA;AAC1C,IAAO,OAAA,IAAA,CAAK,QAAQ,KAAO,EAAA,GAAG,EAAE,OAAQ,CAAA,IAAA,EAAM,GAAG,CAAA,CAAE,WAAY,EAAA,CAAA;AAAA,GACnE;AACJ;;;;"}