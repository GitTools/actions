name: checkout-path
on:
  push:
    branches:
      - checkout

  pull_request:
    branches:
      - checkout
  workflow_dispatch:

defaults:
  run:
    shell: pwsh

jobs:
  build:

    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          path: gv-repo
          fetch-depth: 0

      - name: Install GitVersion
        uses: arturcic/gittools-actions/gitversion/setup@checkout
        with:
          versionSpec: '5.x'
          preferLatestVersion: true

      - name: Determine version
        id: gitversion
        uses: arturcic/gittools-actions/gitversion/execute@checkout
        with:
          targetPath: gv-repo

      - run: |
          echo "Major      (major)                                          : ${{ env.major }}"
          echo "Major      (env.GitVersion_Major)                           : ${{ env.GitVersion_Major }}"
          echo "Major      (steps.gitversion.outputs.major)                 : ${{ steps.gitversion.outputs.major }}"
          echo "Major      (steps.gitversion.outputs.GitVersion_Major)      : ${{ steps.gitversion.outputs.GitVersion_Major }}"

          echo "Minor      (minor)                                          : ${{ env.minor }}"
          echo "Minor      (env.GitVersion_Minor)                           : ${{ env.GitVersion_Minor }}"
          echo "Minor      (steps.gitversion.outputs.minor)                 : ${{ steps.gitversion.outputs.minor }}"
          echo "Minor      (steps.gitversion.outputs.GitVersion_Minor)      : ${{ steps.gitversion.outputs.GitVersion_Minor }}"

          echo "Patch      (patch)                                          : ${{ env.patch }}"
          echo "Patch      (env.GitVersion_Patch)                           : ${{ env.GitVersion_Patch }}"
          echo "Patch      (steps.gitversion.outputs.patch)                 : ${{ steps.gitversion.outputs.patch }}"
          echo "Patch      (steps.gitversion.outputs.GitVersion_Patch)      : ${{ steps.gitversion.outputs.GitVersion_Patch }}"

          echo "FullSemVer (env.fullSemVer)                                 : ${{ env.fullSemVer }}"
          echo "FullSemVer (env.GitVersion_FullSemVer)                      : ${{ env.GitVersion_FullSemVer }}"
          echo "FullSemVer (steps.gitversion.outputs.fullSemVer)            : ${{ steps.gitversion.outputs.fullSemVer }}"
          echo "FullSemVer (steps.gitversion.outputs.GitVersion_FullSemVer) : ${{ steps.gitversion.outputs.GitVersion_FullSemVer }}"
        name: Use variables and output
