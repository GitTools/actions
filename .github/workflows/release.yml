name: release
on:
  release:
    types: [ released ]

defaults:
  run:
    shell: pwsh

jobs:
  release:
    if: github.event.release.prerelease == false
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.PUSH_GITHUB_TOKEN }}

      - run: |
          npm install
          npm run build:tools
          npm run build:agent:github
          npm run build:agent:azure

        name: Build code
      - name: Install GitVersion
        uses: ./gitversion/setup
        with:
          versionSpec: '6.0.x'
      - name: Install GitReleaseManager
        uses: ./gitreleasemanager/setup
        with:
          versionSpec: '0.18.x'
      - name: Use GitVersion
        id: gitversion # step id used as reference for output values
        uses: ./gitversion/execute
      - name: Update Release Notes
        uses: ./gitreleasemanager/create
        with:
          token: ${{ secrets.RELEASE_GITHUB_TOKEN }}
          owner: ${{ github.repository_owner }}
          repository: actions
          milestone: "v${{ steps.gitversion.outputs.majorMinorPatch }}"
          name: "v${{ steps.gitversion.outputs.majorMinorPatch }}"
          isPreRelease: ${{ github.event.release.prerelease }}
          targetcommitish: "main"
      - name: Publish To Azure Marketplace
        id: publish-azure
        uses: ./.github/actions/publish-azure
        with:
          mode: 'prod'
          major: ${{ steps.gitversion.outputs.major }}
          minor: ${{ steps.gitversion.outputs.minor }}
          patch: ${{ steps.gitversion.outputs.patch }}
          token: ${{ secrets.TFX_TOKEN }}
      - name: Add Assets
        uses: ./gitreleasemanager/addasset
        with:
          token: ${{ secrets.RELEASE_GITHUB_TOKEN }}
          owner: ${{ github.repository_owner }}
          repository: actions
          milestone: "v${{ steps.gitversion.outputs.majorMinorPatch }}"
          assets: ${{ steps.publish-azure.outputs.vsix }}
      - name: Close Release
        uses: ./gitreleasemanager/close
        with:
          token: ${{ secrets.RELEASE_GITHUB_TOKEN }}
          owner: ${{ github.repository_owner }}
          repository: actions
          milestone: "v${{ steps.gitversion.outputs.majorMinorPatch }}"
      - name: Get tags
        id: get-tags
        shell: pwsh
        run: |
          # Finding the version from release tag

          $newTag = "${{steps.gitversion.outputs.majorMinorPatch}}"
          $oldTag = cat package.json | ConvertFrom-Json | Select-Object -ExpandProperty version
          echo "Old tag: $oldTag"
          echo "New tag: $newTag"

          "oldTag=$oldTag" >> $env:GITHUB_OUTPUT
          "newTag=$newTag" >> $env:GITHUB_OUTPUT
      - uses: peter-evans/repository-dispatch@v3
        name: Trigger Update Examples version (actions)
        with:
          token: ${{ secrets.RELEASE_GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          event-type: update-examples
          client-payload: '{"oldTag": "${{ steps.get-tags.outputs.oldTag }}", "newTag": "${{ steps.get-tags.outputs.newTag }}"}'
      - uses: peter-evans/repository-dispatch@v3
        name: Trigger Update Examples version (actions-test)
        with:
          token: ${{ secrets.RELEASE_GITHUB_TOKEN }}
          repository: ${{ github.repository_owner }}/actions-test
          event-type: update-examples
          client-payload: '{"oldTag": "${{ steps.get-tags.outputs.oldTag }}", "newTag": "${{ steps.get-tags.outputs.newTag }}"}'
